{{- 'section-blog.css' | asset_url | stylesheet_tag -}}
{{- 'component-card-article.css' | asset_url | stylesheet_tag -}}
{{- 'component-card-text.css' | asset_url | stylesheet_tag -}}

{% style %}
  .blog__articles-grid {
    column-gap: {{ section.settings.column_gap_mobile }}rem;
  }
  @media screen and (min-width: 990px) {
    .blog__articles-grid {
      column-gap: {{ section.settings.column_gap_desktop }}rem;
    }
  }
{% endstyle %}

<script src="{{- 'collection-load-more.js' | asset_url -}}" defer="defer"></script>

{%- paginate blog.articles by section.settings.articles_per_page -%}
  <div class="blog {{ section.settings.color_scheme_text }} {{ section.settings.color_scheme_background }}">
    {%- if blog.articles.size > 0 and section.settings.enable_filtering_by_tags -%}
      <div class="blog__head">
        <div class="container">
          <div class="blog__filters text-navigation-button">
            <ul class="blog__filters-items list-unstyled">
              {%- assign all_tags_visible = true -%}

              {%- if current_tags or current_tags.size > 0 -%}
                {%- assign all_tags_visible = false -%}
              {%- endif -%}

              <li class="blog__filters-item">
                {%- if all_tags_visible -%}
                  <span class="default">
                    {{- 'blogs.general.show_all' | t -}}
                  </span>
                {%- else -%}
                  <a href="{{- blog.url -}}">
                    {{- 'blogs.general.show_all' | t -}}
                  </a>
                {%- endif -%}
              </li>

              {%- assign tags_counter = 0 -%}
              {%- for tag in blog.all_tags -%}
                {%- assign tags_counter = tags_counter | plus: 1 -%}

                {%- if current_tags contains tag -%}
                  <li class="blog__filters-item is-active">
                    <span>{{- tag -}}</span>
                  </li>
                {%- else -%}
                  <li class="blog__filters-item">
                    {{- tag | link_to_tag: tag -}}
                  </li>
                {%- endif -%}
              {%- endfor -%}
            </ul><!-- /.blog__filters-items -->
          </div><!-- /.blog__filters -->
        </div><!-- /.container -->
      </div><!-- /.blog__head -->
    {%- endif -%}

    <div class="blog__articles" id="ProductGridContainer">
      <div class="container blog__container">
        {%- if blog.articles.size == 0 -%}
          <div class="blog__articles-empty text-center">
            <p>{{- 'blogs.general.no_articles_found' | t -}}</p>
          </div><!-- /.blog__articles-empty -->
        {%- else -%}
          <div class="blog__articles-grid text-center" id="product-grid">
            {%- liquid
              if section.blocks.size > 0
                capture card_text_html
                  for block in section.blocks
                    assign card_text_position = block.settings.position
                    assign card_text_classes = block.settings.color_scheme_text | append: ' ' | append: block.settings.color_scheme_background | append: ' card-text--static blog__card-text'

                    render 'card-text', class: card_text_classes, title: block.settings.title, button_text: block.settings.button_text, button_url: block.settings.button_url, button_style: block.settings.button_style
                  endfor
                endcapture
              endif

              for article in blog.articles
                if forloop.index == card_text_position
                  echo card_text_html
                endif

                render 'card-article', article: article, class: 'blog__card-article', show_tags: section.settings.show_tags, show_date: section.settings.show_date, show_author: section.settings.show_author, show_excerpt: section.settings.show_excerpt, tags_count: section.settings.tags_count, content_alignment: section.settings.content_alignment
              endfor

              if card_text_position > section.settings.articles_per_page
                echo card_text_html
              endif
            -%}
          </div><!-- /.blog__articles-grid -->
        {%- endif -%}

        {%- if paginate.pages > 1 -%}
          <collection-load-more class="blog__actions text-center no-js-hidden{% unless paginate.next %} hidden{% endunless %}" data-current-page="{{- paginate.current_page -}}">
            {%- liquid
              assign load_more_button_data_href = 'data-href="' | append: paginate.next.url | append: '"'
              assign load_more_value = 'collection.ajax_button' | t

              render 'button', class: 'button js-btn-load-more', button_style: 'button--outlined', attr: load_more_button_data_href, value: load_more_value, loading_spinner: true
            -%}
          </collection-load-more><!-- /.blog__actions -->

          <div class="blog__actions no-js">
            {%- render 'pagination', paginate: paginate, anchor: '' -%}
          </div><!-- /.blog__actions -->
        {%- endif -%}
      </div><!-- /.container -->
    </div><!-- .blog__articles -->
  </div>
{%- endpaginate -%}

{% schema %}
{
  "name": "t:sections.main-blog.name",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.global.settings.header_color_scheme.content"
    },
    {
      "type": "select",
      "id": "color_scheme_text",
      "label": "t:sections.global.settings.color_scheme_text.label",
      "options": [
        {
          "value": "text-colors-default",
          "label": "t:sections.global.settings.color_scheme_text.options.default.label"
        },
        {
          "value": "text-colors-secondary",
          "label": "t:sections.global.settings.color_scheme_text.options.secondary.label"
        },
        {
          "value": "text-colors-inverse",
          "label": "t:sections.global.settings.color_scheme_text.options.inverse.label"
        }
      ],
      "default": "text-colors-secondary"
    },
    {
      "type": "select",
      "id": "color_scheme_background",
      "label": "t:sections.global.settings.color_scheme_background.label",
      "options": [
        {
          "value": "background-colors-default",
          "label": "t:sections.global.settings.color_scheme_background.options.default.label"
        },
        {
          "value": "background-colors-secondary",
          "label": "t:sections.global.settings.color_scheme_background.options.secondary.label"
        },
        {
          "value": "background-colors-accent-1",
          "label": "t:sections.global.settings.color_scheme_background.options.accent_one.label"
        },
        {
          "value": "background-colors-accent-2",
          "label": "t:sections.global.settings.color_scheme_background.options.accent_two.label"
        },
        {
          "value": "background-colors-inverse",
          "label": "t:sections.global.settings.color_scheme_background.options.inverse.label"
        }
      ],
      "default": "background-colors-default"
    },
    {
      "type": "header",
      "content": "t:sections.main-blog.settings.header_general.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering_by_tags",
      "default": true,
      "label": "t:sections.main-blog.settings.enable_filtering_by_tags.label"
    },
    {
      "type": "range",
      "id": "articles_per_page",
      "label": "t:sections.main-blog.settings.articles_per_page.label",
      "min": 3,
      "max": 50,
      "step": 1,
      "default": 20
    },
    {
      "type": "range",
      "id": "column_gap_desktop",
      "label": "t:sections.global.settings.column_gap_desktop.label",
      "min": 0.2,
      "max": 3.2,
      "step": 0.2,
      "default": 0.2
    },
    {
      "type": "range",
      "id": "column_gap_mobile",
      "label": "t:sections.global.settings.column_gap_mobile.label",
      "min": 0.2,
      "max": 3.2,
      "step": 0.2,
      "default": 0.2
    },
    {
      "type": "header",
      "content": "t:sections.main-blog.settings.header_card_article.content"
    },
    {
      "type": "checkbox",
      "id": "show_excerpt",
      "default": true,
      "label": "t:sections.main-blog.settings.show_excerpt.label"
    },
    {
      "type": "checkbox",
      "id": "show_date",
      "default": true,
      "label": "t:sections.main-blog.settings.show_date.label"
    },
    {
      "type": "checkbox",
      "id": "show_author",
      "default": true,
      "label": "t:sections.main-blog.settings.show_author.label"
    },
    {
      "type": "select",
      "id": "content_alignment",
      "label": "t:sections.global.settings.content_alignment.label",
      "options": [
        {
          "value": "text-left",
          "label": "t:sections.global.settings.content_alignment.options.left.label"
        },
        {
          "value": "text-center",
          "label": "t:sections.global.settings.content_alignment.options.center.label"
        },
        {
          "value": "text-right",
          "label": "t:sections.global.settings.content_alignment.options.right.label"
        }
      ],
      "default": "text-center"
    }
  ],
  "max_blocks": 1,
  "blocks": [
    {
      "type": "text-card",
      "name": "t:sections.main-collection.blocks.text-card.name",
      "settings": [
        {
          "type": "header",
          "content": "t:sections.global.settings.header_color_scheme.content"
        },
        {
          "type": "select",
          "id": "color_scheme_text",
          "label": "t:sections.global.settings.color_scheme_text.label",
          "options": [
            {
              "value": "text-colors-default",
              "label": "t:sections.global.settings.color_scheme_text.options.default.label"
            },
            {
              "value": "text-colors-secondary",
              "label": "t:sections.global.settings.color_scheme_text.options.secondary.label"
            },
            {
              "value": "text-colors-inverse",
              "label": "t:sections.global.settings.color_scheme_text.options.inverse.label"
            }
          ],
          "default": "text-colors-secondary"
        },
        {
          "type": "select",
          "id": "color_scheme_background",
          "label": "t:sections.global.settings.color_scheme_background.label",
          "options": [
            {
              "value": "background-colors-default",
              "label": "t:sections.global.settings.color_scheme_background.options.default.label"
            },
            {
              "value": "background-colors-secondary",
              "label": "t:sections.global.settings.color_scheme_background.options.secondary.label"
            },
            {
              "value": "background-colors-accent-1",
              "label": "t:sections.global.settings.color_scheme_background.options.accent_one.label"
            },
            {
              "value": "background-colors-accent-2",
              "label": "t:sections.global.settings.color_scheme_background.options.accent_two.label"
            },
            {
              "value": "background-colors-inverse",
              "label": "t:sections.global.settings.color_scheme_background.options.inverse.label"
            }
          ],
          "default": "background-colors-accent-2"
        },
        {
          "type": "header",
          "content": "t:sections.main-collection.blocks.text-card.settings.header_general.content"
        },
        {
          "type": "range",
          "id": "position",
          "min": 1,
          "max": 28,
          "step": 1,
          "label": "t:sections.main-collection.blocks.text-card.settings.position.label",
          "info": "t:sections.main-collection.blocks.text-card.settings.position.info",
          "default": 8
        },
        {
          "type": "header",
          "content": "t:sections.main-collection.blocks.text-card.settings.header_text.content"
        },
        {
          "type": "textarea",
          "id": "title",
          "label": "t:sections.main-collection.blocks.text-card.settings.title.label",
          "default": "Heading goes here"
        },
        {
          "type": "header",
          "content": "t:sections.main-collection.blocks.text-card.settings.header_button.content"
        },
        {
          "type": "select",
          "id": "button_style",
          "label": "t:sections.global.settings.button_style.label",
          "options": [
            {
              "value": "button--filled",
              "label": "t:sections.global.settings.button_style.options.filled.label"
            },
            {
              "value": "button--outlined",
              "label": "t:sections.global.settings.button_style.options.outlined.label"
            },
            {
              "value": "button--outlined-inverse",
              "label": "t:sections.global.settings.button_style.options.outlined_inverse.label"
            },
            {
              "value": "default",
              "label": "t:sections.global.settings.button_style.options.default.label"
            }
          ],
          "info": "t:sections.global.settings.button_style.info",
          "default": "button--outlined"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "t:sections.main-collection.blocks.text-card.settings.button_text.label",
          "default": "Button label"
        },
        {
          "type": "url",
          "id": "button_url",
          "label": "t:sections.main-collection.blocks.text-card.settings.button_url.label",
          "default": "/"
        }
      ]
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "text-card"
      }
    ]
  }
}
{% endschema %}
