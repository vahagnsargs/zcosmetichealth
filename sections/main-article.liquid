{{ 'section-article.css' | asset_url | stylesheet_tag }}

{%- capture article_additional_classes -%}
  {{ section.settings.color_scheme_text }} {{ section.settings.color_scheme_background }}
{%- endcapture -%}

{%- unless blog.comments_enabled? -%}
  {%- assign article_additional_classes = article_additional_classes | append: ' article--comments-disabled' -%}
{%- endunless -%}

<article class="article {{ article_additional_classes | strip }}" itemscope itemtype="http://schema.org/BlogPosting">
  {%- if settings.enable_breadcrumbs_on_other_pages -%}
    <div class="article__breadcrumbs small-hide">
      {%- render 'breadcrumbs' -%}
    </div><!-- /.article__breadcrumbs -->
  {%- endif -%}

  {%- for block in section.blocks -%}
    {%- case block.type -%}
      {%- when '@app' -%}
        <div class="container container--extra-small">
          {% render block %}
        </div>
      {%- when 'featured_image'-%}
        {%- if article.image -%}
          <div class="article__hero container" {{ block.shopify_attributes }}>
            <div class="article__media media" itemprop="image">
              {%- render 'image', image: article.image, alt: article.image.alt | escape -%}
            </div>
          </div>
        {%- endif -%}
      {%- when 'tags'-%}
        {%- if article.tags != null -%}
          <div class="article__tags text-navigation-button container container--extra-small" {{ block.shopify_attributes }}>
            <ul class="article__tags-list list-unstyled">
              {%- for tag in article.tags -%}
                <li class="article__tags-item">
                  {%- assign tag_output = tag -%}

                  {%- if block.settings.blog_tags_type == 'links' -%}
                    {%- assign tag_output = tag | link_to_tag: tag -%}
                  {%- endif -%}

                  {{- tag_output -}}
                </li><!-- /.article__tags-item -->
              {%- endfor -%}
            </ul>
          </div>
        {%- endif -%}

      {%- when 'title'-%}
        <header class="article__head container container--extra-small" {{ block.shopify_attributes }}>
          <h1 class="article__title h2" itemprop="headline">
            {{- article.title | escape -}}
          </h1>

          {%- if block.settings.blog_show_date or block.settings.blog_show_author -%}
            <div class="article__meta">
              <span class="article__author">
                {{- 'blogs.general.posted' | t | append: ' ' -}}

                {%- if block.settings.blog_show_author -%}
                  {{- 'blogs.general.posted_by' | t: author: article.author -}}
                {%- endif -%}
              </span>

              {%- if block.settings.blog_show_date -%}
                {%- assign date_format = 'date_formats.short' | t -%}
                {%- assign published_at = article.published_at | date: date_format -%}

                <span class="article__date">
                  {{- 'blogs.general.posted_on' | t: date: published_at | prepend: ' ' -}}
                </span>
              {%- endif -%}
            </div><!-- /.article__meta -->
          {%- endif -%}
        </header>

      {%- when 'content'-%}
        <div class="article__content container container--extra-small" itemprop="articleBody" {{ block.shopify_attributes }}>
          <div class="article__content-inner">{{- article.content -}}</div><!-- /.article__content-inner -->
        </div>
    {%- endcase -%}
  {%- endfor -%}

  {%- if
    section.settings.show_socials_sharing or
    section.settings.show_back_to_blog_button
  -%}
    <div class="article__foot container container--extra-small">
      <div class="article__foot-inner">
        {%- if section.settings.show_socials_sharing -%}
          <div class="article__socials-sharing svg-color-inherit">
            {%- render 'socials-sharing', classes: 'article__socials' -%}
          </div>
        {%- endif -%}

        {%- if section.settings.show_back_to_blog_button -%}
          <div class="article__back text-navigation-button">
            <a href="{{- blog.url -}}" class="article__back-link svg-color-inherit">
              {%- render 'icon-chevron-left' -%}

              {{- 'article.back_to_blog' | t: title: blog.title -}}
            </a>
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endif -%}

  {%- if blog.comments_enabled? -%}
    {%- assign no_comments = true -%}

    {%- if article.comments_count > 0 -%}
      {%- assign no_comments = false -%}
    {%- endif -%}

    <div class="container container--extra-small{% if blog.moderated? %} article__comments-wrapper--moderated{% endif %}{% if no_comments %} article__comments-wrapper--no-comments{% endif %}">
      <div id="comments" class="article__comments-wrapper">
        {%- if article.comments_count > 0 -%}
          {%- assign anchor_id = '#Comments-' | append: article.id -%}

          <h2 class="article__comments-title h3 text-center" id="Comments-{{- article.id -}}" tabindex="-1">
            {{- 'article.comments' | t: count: article.comments_count -}}
          </h2>

          {%- paginate article.comments by section.settings.comments_per_page -%}
            <div class="article__comments color-body-text {{ section.settings.comments_color_scheme_text }} {{ section.settings.comments_color_scheme_background }}">
              {%- if comment.status == 'pending' and comment.content -%}
                <article id="{{- comment.id -}}" class="article__comment">
                  {{- comment.content -}}
                  <footer class="article__comment-foot">
                    <span class="article__comment-author">
                      {{- comment.author -}}
                    </span>
                  </footer>
                </article>
              {%- endif -%}

              {%- for comment in article.comments -%}
                <article id="{{- comment.id -}}" class="article__comment">
                  {{- comment.content -}}
                  <footer class="article__comment-foot">
                    <span class="article__comment-author">
                      {{- comment.author -}},
                    </span>

                    <span class="article__comment-date">
                      {%- assign date_format = 'date_formats.short' | t -%}
                      {{- comment.created_at | time_tag: format: 'date' -}}
                    </span>
                  </footer>
                </article>
              {%- endfor -%}

              {% render 'pagination-alt', paginate: paginate, anchor: anchor_id, class: 'article__comments-pagination-alt' %}
            </div>
          {%- endpaginate -%}
        {%- endif -%}

        {% form 'new_comment', article %}
          {%- liquid
            assign post_message = 'article.success'
            if blog.moderated? and comment.status == 'unapproved'
              assign post_message = 'article.success_moderated'
            endif
          -%}

          <h2 class="h4">
            {{- 'article.comment_form_title' | t -}}
          </h2>

          {%- if form.errors -%}
            <div class="article__comments-message article__comments-message--error" role="alert">
              <p class="form__message" tabindex="-1" autofocus>
                {% render 'icon-close' %} {{ 'article.error_heading' | t }}
              </p>
            </div>

          {%- elsif form.posted_successfully? -%}
            <div class="article__comments-message" role="status">
              <p class="form__message" tabindex="-1" autofocus>
                {%- render 'icon-check-circle' -%} {{ post_message | t }}
              </p>
            </div>
          {%- endif -%}

          <div class="article__comments-fields">
            <div class="form-row form-row--double">
              <div class="field field--with-error">
                <label class="field__label" for="CommentForm-author">
                  {{- 'article.name' | t -}} <span aria-hidden="true">*</span>
                </label>

                <input
                  type="text"
                  name="comment[author]"
                  id="CommentForm-author"
                  class="field__input"
                  autocomplete="name"
                  value="{{ form.author }}"
                  aria-required="true"
                  {% if form.errors contains 'author' %}
                    aria-invalid="true"
                    aria-describedby="CommentForm-author-error"
                  {% endif %}
                >

                {%- if form.errors contains 'author' -%}
                  <small id="CommentForm-author-error" class="form__row-error">
                    <span class="form__message form__message--error">
                      {{ 'article.name' | t }} {{ form.errors.messages['author'] }}.
                    </span>
                  </small>
                {%- endif -%}
              </div>

              <div class="field field--with-error">
                <label class="field__label" for="CommentForm-email">
                  {{- 'article.email' | t -}} <span aria-hidden="true">*</span>
                </label>

                <input
                  type="email"
                  name="comment[email]"
                  id="CommentForm-email"
                  autocomplete="email"
                  class="field__input"
                  value="{{ form.email }}"
                  autocorrect="off"
                  autocapitalize="off"
                  aria-required="true"
                  {% if form.errors contains 'email' %}
                    aria-invalid="true"
                    aria-describedby="CommentForm-email-error"
                  {% endif %}
                >

                {%- if form.errors contains 'email' -%}
                  <small id="CommentForm-email-error" class="form__row-error">
                    <span class="form__message form__message--error">
                      {{ 'article.email' | t }} {{ form.errors.messages['email'] }}.
                    </span>
                  </small>
                {%- endif -%}
              </div>
            </div>

            <div class="form-row">
              <div class="field field--with-error">
                <label class="form__label field__label" for="CommentForm-body">
                  {{- 'article.message' | t -}} <span aria-hidden="true">*</span>
                </label>

                <textarea
                  rows="5"
                  name="comment[body]"
                  id="CommentForm-body"
                  class="text-area field__input"
                  aria-required="true"
                  {% if form.errors contains 'body' %}
                    aria-invalid="true"
                    aria-describedby="CommentForm-body-error"
                  {% endif %}
                  >{{ form.body }}</textarea>
              </div>

              {%- if form.errors contains 'body' -%}
                <small id="CommentForm-body-error" class="form__row-error">
                  <span class="form__message form__message--error">
                    {{ 'article.message' | t }} {{ form.errors.messages['body'] }}.
                  </span>
                </small>
              {%- endif -%}
            </div>
          </div>

          {%- if blog.moderated? -%}
            <p class="article__comments-warning">
              {{- 'article.moderated' | t -}}
            </p>
          {%- endif -%}

          {%- liquid
            assign button_text = 'article.post' | t
            render 'button', type: 'submit', value: button_text, class: 'button', style: 'solid'
            assign button_text = nil
          -%}


        {% endform %}
      </div>
    </div>
  {%- endif -%}
</article>

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Article",
    "articleBody": {{ article.content | strip_html | json }},
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": {{ shop.url | append: page.url | json }}
    },
    "headline": {{ article.title | json }},
    {% if article.excerpt != blank %}
      "description": {{ article.excerpt | strip_html | json }},
    {% endif %}
    {% if article.image %}
      {% assign image_size = article.image.width | append: 'x' %}
      "image": [
        {{ article | image_url: image_size | prepend: "https:" | json }}
      ],
    {% endif %}
    "datePublished": {{ article.published_at | date: '%Y-%m-%dT%H:%M:%SZ' | json }},
    "dateCreated": {{ article.created_at | date: '%Y-%m-%dT%H:%M:%SZ' | json }},
    "author": {
      "@type": "Person",
      "name": {{ article.author | json }}
    }
  }
</script>

{% schema %}
{
  "name": "t:sections.main-article.name",
  "tag": "section",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.global.settings.header_color_scheme.content"
    },
    {
      "type": "select",
      "id": "color_scheme_text",
      "label": "t:sections.global.settings.color_scheme_text.label",
      "options": [
        {
          "value": "text-colors-default",
          "label": "t:sections.global.settings.color_scheme_text.options.default.label"
        },
        {
          "value": "text-colors-secondary",
          "label": "t:sections.global.settings.color_scheme_text.options.secondary.label"
        },
        {
          "value": "text-colors-inverse",
          "label": "t:sections.global.settings.color_scheme_text.options.inverse.label"
        }
      ],
      "default": "text-colors-secondary"
    },
    {
      "type": "select",
      "id": "color_scheme_background",
      "label": "t:sections.global.settings.color_scheme_background.label",
      "options": [
        {
          "value": "background-colors-default",
          "label": "t:sections.global.settings.color_scheme_background.options.default.label"
        },
        {
          "value": "background-colors-secondary",
          "label": "t:sections.global.settings.color_scheme_background.options.secondary.label"
        },
        {
          "value": "background-colors-accent-1",
          "label": "t:sections.global.settings.color_scheme_background.options.accent_one.label"
        },
        {
          "value": "background-colors-accent-2",
          "label": "t:sections.global.settings.color_scheme_background.options.accent_two.label"
        },
        {
          "value": "background-colors-inverse",
          "label": "t:sections.global.settings.color_scheme_background.options.inverse.label"
        }
      ],
      "default": "background-colors-default"
    },
    {
      "type": "header",
      "content": "t:sections.main-article.settings.header_general.content"
    },
    {
      "type": "checkbox",
      "id": "show_back_to_blog_button",
      "default": true,
      "label": "t:sections.main-article.settings.show_back_to_blog_button.label"
    },
    {
      "type": "checkbox",
      "id": "show_socials_sharing",
      "default": true,
      "label": "t:sections.main-article.settings.show_socials_sharing.label"
    },
    {
      "type": "range",
      "id": "comments_per_page",
      "label": "t:sections.main-article.settings.comments_per_page.label",
      "min": 2,
      "max": 20,
      "step": 1,
      "default": 5
    },
    {
      "type": "header",
      "content": "t:sections.main-article.settings.header_comment_color_scheme.content"
    },
    {
      "type": "select",
      "id": "comments_color_scheme_text",
      "label": "t:sections.global.settings.color_scheme_text.label",
      "options": [
        {
          "value": "text-colors-default",
          "label": "t:sections.global.settings.color_scheme_text.options.default.label"
        },
        {
          "value": "text-colors-secondary",
          "label": "t:sections.global.settings.color_scheme_text.options.secondary.label"
        },
        {
          "value": "text-colors-inverse",
          "label": "t:sections.global.settings.color_scheme_text.options.inverse.label"
        }
      ],
      "default": "text-colors-secondary"
    },
    {
      "type": "select",
      "id": "comments_color_scheme_background",
      "label": "t:sections.global.settings.color_scheme_background.label",
      "options": [
        {
          "value": "background-colors-default",
          "label": "t:sections.global.settings.color_scheme_background.options.default.label"
        },
        {
          "value": "background-colors-secondary",
          "label": "t:sections.global.settings.color_scheme_background.options.secondary.label"
        },
        {
          "value": "background-colors-accent-1",
          "label": "t:sections.global.settings.color_scheme_background.options.accent_one.label"
        },
        {
          "value": "background-colors-accent-2",
          "label": "t:sections.global.settings.color_scheme_background.options.accent_two.label"
        },
        {
          "value": "background-colors-inverse",
          "label": "t:sections.global.settings.color_scheme_background.options.inverse.label"
        }
      ],
      "default": "background-colors-accent-1"
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "featured_image",
      "name": "t:sections.main-article.blocks.featured_image.name",
      "limit": 1
    },
    {
      "type": "title",
      "name": "t:sections.main-article.blocks.title.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "blog_show_date",
          "default": true,
          "label": "t:sections.main-article.blocks.title.settings.blog_show_date.label"
        },
        {
          "type": "checkbox",
          "id": "blog_show_author",
          "default": true,
          "label": "t:sections.main-article.blocks.title.settings.blog_show_author.label"
        }
      ]
    },
    {
      "type": "content",
      "name": "t:sections.main-article.blocks.content.name",
      "limit": 1
    },
    {
      "type": "tags",
      "name": "t:sections.main-article.blocks.tags.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "blog_tags_type",
          "label": "t:sections.main-article.blocks.tags.settings.blog_tags_type.label",
          "options": [
            {
              "value": "links",
              "label": "t:sections.main-article.blocks.tags.settings.blog_tags_type.options__1.label"
            },
            {
              "value": "text",
              "label": "t:sections.main-article.blocks.tags.settings.blog_tags_type.options__2.label"
            }
          ],
          "default": "links"
        }
      ]
    }
  ]
}
{% endschema %}
